{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\mytask\\\\src\\\\components\\\\Input\\\\InputCard.js\";\nimport { InputBase, Paper, Button, IconButton } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport ClearIcone from '@material-ui/icons/Clear';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport storeApi from '../../utils/storeApi';\nconst useStyle = makeStyles(theme => ({\n  card: {\n    width: '280px',\n    margin: theme.spacing(0, 1, 1, 1),\n    paddingBottom: theme.spacing(4)\n  },\n  input: {\n    margin: theme.spacing(1)\n  },\n  btnConfirm: {\n    background: '#5AAC44',\n    color: '#fff',\n    '&:hover': {\n      background: fade('#5AAC44', 0.75)\n    }\n  },\n  confirm: {\n    margin: theme.spacing(0, 1, 1, 1)\n  }\n}));\nexport default function InputCard({\n  setOpen,\n  listId,\n  type\n}) {\n  const classes = useStyle();\n  const {\n    addMoreCard,\n    addMoreList\n  } = useContext(storeApi);\n  const [title, setTitle] = useState('');\n\n  const handleOnChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleBtnconfirm = () => {\n    if (type === 'card') {\n      addMoreCard(title, listId);\n      setTitle('');\n      setOpen(false);\n    } else {\n      addMoreList(title);\n      setTitle('');\n      setOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    onChange: handleOnChange,\n    multiline: true,\n    onBlur: () => setOpen(false),\n    fullWidth: true,\n    inputProps: {\n      className: classes.input\n    },\n    value: title,\n    placeholder: type === 'card' ? \"Enter a title of this card..\" : \"Enter list title..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.btnConfirm,\n    onClick: handleBtnconfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, type === 'card' ? \"Add card\" : \"Add list\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ClearIcone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Shubham/mytask/src/components/Input/InputCard.js"],"names":["InputBase","Paper","Button","IconButton","React","useContext","useState","ClearIcone","fade","makeStyles","storeApi","useStyle","theme","card","width","margin","spacing","paddingBottom","input","btnConfirm","background","color","confirm","InputCard","setOpen","listId","type","classes","addMoreCard","addMoreList","title","setTitle","handleOnChange","e","target","value","handleBtnconfirm","className"],"mappings":"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","sourcesContent":["import { InputBase, Paper, Button, IconButton } from '@material-ui/core';\r\nimport React, { useContext, useState } from 'react';\r\nimport ClearIcone from '@material-ui/icons/Clear';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport storeApi from '../../utils/storeApi';\r\n\r\n\r\n\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n\r\n    card: {\r\n        width: '280px',\r\n        margin: theme.spacing(0,1,1,1),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    input: {\r\n        margin:theme.spacing(1),\r\n    },\r\n    btnConfirm: {\r\n        background:'#5AAC44',\r\n        color:'#fff',\r\n        '&:hover':{\r\n            background:fade('#5AAC44',0.75),\r\n        },\r\n    },\r\n    confirm: {\r\n        margin: theme.spacing(0,1,1,1),\r\n\r\n    },\r\n}))\r\n\r\nexport default function InputCard( {setOpen, listId, type} ){\r\n    const classes = useStyle();\r\n    const {addMoreCard, addMoreList} = useContext(storeApi);\r\n    const [title,setTitle ] = useState('');\r\n    const handleOnChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleBtnconfirm = () =>{\r\n        if(type === 'card'){\r\n            addMoreCard(title, listId);\r\n            setTitle('');\r\n            setOpen(false);\r\n\r\n        }\r\n        else{\r\n            addMoreList(title);\r\n            setTitle('');\r\n            setOpen(false);\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <div>\r\n            <Paper className={classes.card}>\r\n                <InputBase \r\n                onChange={handleOnChange}\r\n                multiline\r\n                onBlur={() => setOpen(false)} \r\n                fullWidth inputProps={{className: classes.input,}}\r\n                value={title}\r\n                placeholder={type ==='card'?\"Enter a title of this card..\":\"Enter list title..\"}\r\n                />\r\n            </Paper>\r\n            </div>\r\n            <div className={classes.confirm}>\r\n                <button className={classes.btnConfirm} onClick={handleBtnconfirm}>\r\n                    {type === 'card'?\"Add card\" : \"Add list\"}</button>\r\n                <IconButton onClick={() => setOpen(false)}>\r\n                    <ClearIcone />\r\n                </IconButton>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}