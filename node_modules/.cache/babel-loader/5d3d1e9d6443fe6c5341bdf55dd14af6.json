{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\mytask\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport InputContainer from './components/Input/InputContainer';\nimport List from './components/List/List';\nimport store from './utils/store';\nimport StoreApi from './utils/storeApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext } from 'react-beautiful-dnd';\nconst useStyle = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n    background: 'blue',\n    overflowY: 'auto'\n  }\n}));\nexport default function App() {\n  const [data, setData] = useState(store);\n  const classes = useStyle();\n\n  const addMoreCard = (title, listId) => {\n    const newCardId = uuid();\n    console.log(newCardId);\n    const newcard = {\n      id: newCardId,\n      title\n    };\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newcard];\n    const newState = { ...data,\n      lists: { ...data.lists,\n        [listId]: list\n      }\n    };\n    setData(newState);\n  };\n\n  const addMoreList = title => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      card: []\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: { ...data.lists,\n        [newListId]: newList\n      }\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n    const newState = { ...data,\n      lists: { ...data.lists,\n        [listId]: list\n      }\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(card => card.id === draggableId)[0];\n\n    if (source.draggableId === destination.draggableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StoreApi.Provider, {\n    value: {\n      addMoreCard,\n      addMoreList,\n      updateListTitle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, data.listIds.map(listId => {\n    const list = data.lists[listId];\n    return /*#__PURE__*/React.createElement(List, {\n      list: list,\n      key: listId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(InputContainer, {\n    type: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Shubham/mytask/src/App.js"],"names":["React","useState","v4","uuid","InputContainer","List","store","StoreApi","makeStyles","DragDropContext","useStyle","theme","root","display","minHeight","background","overflowY","App","data","setData","classes","addMoreCard","title","listId","newCardId","console","log","newcard","id","list","lists","cards","newState","addMoreList","newListId","newList","card","listIds","updateListTitle","onDragEnd","result","destination","source","draggableId","sourceList","droppableId","destinationList","draggingCard","filter","splice","index","map"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport{v4 as uuid} from 'uuid';\nimport InputContainer from './components/Input/InputContainer';\nimport List from './components/List/List';\nimport store  from './utils/store';\nimport StoreApi from './utils/storeApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n    background: 'blue',\n    overflowY: 'auto',\n\n  },\n}));\n\n\n\n\nexport default function App(){\n  const [data, setData] = useState(store);\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    const newCardId = uuid();\n    console.log(newCardId);\n    const newcard = {\n      id: newCardId,\n      title,\n    };\n    const list = data.lists[listId];\n    list.cards = [...list.cards,newcard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]:list,\n      },\n    };\n    setData(newState);\n};\n\nconst addMoreList = (title) =>{\n  const newListId = uuid();\n  const newList = {\n    id: newListId,\n    title,\n    card: [],\n  };\n   const newState = {\n     listIds: [...data.listIds,newListId],\n     lists:{\n       ...data.lists,\n       [newListId]:newList,\n     },\n   };\n   setData(newState);    \n};\n\nconst updateListTitle = (title, listId) => {\n  const list = data.lists[listId];\n  list.title = title;\n  const newState = {\n    ...data,\n    lists:{\n      ...data.lists,\n      [listId] : list,\n    },\n  };\n  setData(newState);\n\n};\nconst onDragEnd = (result) => {\n  const {destination, source, draggableId} = result;\n  if(!destination){\n    return;\n  }\n  const sourceList= data.lists[source.droppableId];\n  const destinationList= data.lists[destination.droppableId];\n  const draggingCard= sourceList.cards.filter((card)=>card.id === draggableId)[0];\n  if(source.draggableId === destination.draggableId){\n    sourceList.cards.splice(source.index, 1);\n    destinationList.cards.splice(destination.index, 0, draggingCard);\n\n  }\n\n};\n  return(\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle}}>\n      <DragDropContext onDragEnd={onDragEnd}>\n    <div className={classes.root}>\n      {data.listIds.map((listId) => {\n        const list = data.lists[listId];\n        return<List list={list}  key={listId}/>\n      })}\n      <InputContainer type='list'/>\n    </div>\n    </DragDropContext>\n    </StoreApi.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}